swagger: "2.0"
info:
  title: konger basic API
  description: 一个基础的后台框架api
  version: 1.0.1233333
  termsOfService: http://beego.me/
  contact:
    email: 496317580@qq.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /access/checkToken:
    get:
      tags:
      - access
      description: 根据客户端token验证 参数：{TokenString："需要验证的token"}
      operationId: AccessController.check token
      parameters:
      - in: body
        name: token
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/.GetTokens'
      responses:
        "200":
          description: '{string} models.Object.app_token'
        "403":
          description: appid or appsecret is empty
    post:
      tags:
      - access
      description: 根据客户端token验证 参数：{TokenString："需要验证的token"}
      operationId: AccessController.check token
      parameters:
      - in: body
        name: token
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/.GetTokens'
      responses:
        "200":
          description: '{string} models.Object.app_token'
        "403":
          description: appid or appsecret is empty
  /access/getToken:
    get:
      tags:
      - access
      description: 根据客户端appid与秘钥获取token
      operationId: AccessController.get token
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/models.Apiidentity'
      responses:
        "200":
          description: '{string} models.Object.app_token'
        "403":
          description: appid or appsecret is empty
    post:
      tags:
      - access
      description: 根据客户端appid与秘钥获取token
      operationId: AccessController.get token
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/models.Apiidentity'
      responses:
        "200":
          description: '{string} models.Object.app_token'
        "403":
          description: appid or appsecret is empty
  /captcha/captchaVerify:
    post:
      tags:
      - captcha
      description: 'base64Captcha 图片验证码验证 参数：{"Id": "关键字","VerifyValue": "输入验证码"}'
      operationId: CaptchaController.get captcha
      parameters:
      - in: body
        name: body
        description: 图像对象
        required: true
        schema:
          $ref: '#/definitions/.ConfigJsonBody'
      responses:
        "200":
          description: '{json}  ConfigJsonBody'
        "403":
          description: fail
  /captcha/checkMobileCode:
    post:
      tags:
      - captcha
      description: 'base64Captcha 手机验证码验证 参数：{"idkey": "关键字","code":"验证码"}'
      operationId: CaptchaController.check MobileCode
      parameters:
      - in: body
        name: body
        description: 图像对象
        required: true
        schema:
          $ref: '#/definitions/models.MobileLog'
      responses:
        "200":
          description: '{json}  models.MobileLog.cod'
        "403":
          description: fail
  /captcha/generateCaptcha:
    post:
      tags:
      - captcha
      description: 'base64Captcha 创建图片验证码 参数：{"CaptchaType": "验证码类型"} 为空为默认验证码'
      operationId: CaptchaController.get captcha
      parameters:
      - in: body
        name: body
        description: 图像对象
        required: true
        schema:
          $ref: '#/definitions/.ConfigJsonBody'
      responses:
        "200":
          description: '{json}  ConfigJsonBody'
        "403":
          description: fail
  /captcha/getMobileCode:
    post:
      tags:
      - captcha
      description: 'base64Captcha 获取手机验证码 参数：{"Mobile": "发送的电话号码"}'
      operationId: CaptchaController.get MobileCode
      parameters:
      - in: body
        name: body
        description: 图像对象
        required: true
        schema:
          $ref: '#/definitions/models.MobileLog'
      responses:
        "200":
          description: '{json}  models.MobileLog.cod'
        "403":
          description: fail
  /resource/getTreeGrid:
    post:
      tags:
      - resource
      description: 获取系统所有资源
      operationId: ResourceController.get TreeGrid
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/.LoginParam'
        default: '{Username:string,Userpass:string,Idkey:string,Code:string}'
      responses:
        "200":
          description: '{string} models.Object.resource'
        "403":
          description: username or password is empty
  /resource/parentTreeGrid:
    post:
      tags:
      - resource
      description: 获取可以成为某节点的父节点列表
      operationId: ResourceController.get ParentTreeGrid
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/.LoginParam'
        default: '{Username:string,Userpass:string,Idkey:string,Code:string}'
      responses:
        "200":
          description: '{string} models.Object.resource'
        "403":
          description: username or password is empty
  /user/doLogin:
    post:
      tags:
      - user
      description: 根据用户名密码登录 {"Username":"string","Userpass":"string","Idkey":"string","Code":"string"}
      operationId: UserController.do login
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/.LoginParam'
        default: '{Username:string,Userpass:string,Idkey:string,Code:string}'
      responses:
        "200":
          description: '{string} models.Object.userinfo'
        "403":
          description: username or password is empty
  /user/getUserInfo:
    post:
      tags:
      - user
      description: 根据用户id获取信息 {"Userid":"int"}
      operationId: UserController.do login
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/.userParam'
        default: '{Userid:int}'
      responses:
        "200":
          description: '{string} models.Object.userinfo'
        "403":
          description: username or password is empty
definitions:
  .ConfigJsonBody:
    type: object
  .GetTokens:
    type: object
  .LoginParam:
    type: object
  .userParam:
    type: object
  models.Apiidentity:
    title: Apiidentity
    type: object
    properties:
      Id:
        type: integer
        format: int64
      appId:
        type: string
      appName:
        type: string
      appSecret:
        type: string
      create_time:
        type: string
      dealline:
        type: integer
        format: int64
  models.MobileLog:
    title: MobileLog
    type: object
    properties:
      cod:
        type: string
      ctime:
        type: integer
        format: int64
      exp:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      idk:
        type: string
      phone:
        type: string
      typ:
        type: integer
        format: int64
tags:
- name: access
  description: |
    接口验证模块
- name: captcha
  description: |
    验证码模块
